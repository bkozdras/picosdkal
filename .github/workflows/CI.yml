name: Pico-SDK-AL-CI
on:
  push:
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
      - 'scripts/**'
jobs:
  wait-for-previous-workflow-finished:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    steps:
      - name: "Block concurrent workflow executions"
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  set-unknown-state-badges-for-CI:
    runs-on: ubuntu-latest
    needs: wait-for-previous-workflow-finished
    steps:
      - name: "Create badge BuildDockerImage with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeBuildDockerImage.json
          label: Build
          message: unknown
          color: grey
      - name: "Create badge LibHostCmake with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibHostCmake.json
          label: CMake
          message: unknown
          color: grey
      - name: "Create badge LibHostBuild with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibHostBuild.json
          label: Make-Build
          message: unknown
          color: grey
      - name: "Create badge LibMocksCmake with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibMocksCmake.json
          label: CMake
          message: unknown
          color: grey
      - name: "Create badge LibMocksBuild with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibMocksBuild.json
          label: Make-Build
          message: unknown
          color: grey
      - name: "Create badge LibStubsCmake with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibStubsCmake.json
          label: CMake
          message: unknown
          color: grey
      - name: "Create badge LibStubsBuild with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibStubsBuild.json
          label: Make-Build
          message: unknown
          color: grey
      - name: "Create badge LibTargetCmake with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibTargetCmake.json
          label: CMake
          message: unknown
          color: grey
      - name: "Create badge LibTargetBuild with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibTargetBuild.json
          label: Make-Build
          message: unknown
          color: grey
      - name: "Create badge UTX8664Cmake with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTX8664Cmake.json
          label: CMake
          message: unknown
          color: grey
      - name: "Create badge UTX8664Build with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTX8664Build.json
          label: Make-Build
          message: unknown
          color: grey
      - name: "Create badge UTX8664CTest with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTX8664CTest.json
          label: CTest
          message: unknown
          color: grey
      - name: "Create badge UTXAsan8664Cmake with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTAsanX8664Cmake.json
          label: CMake
          message: unknown
          color: grey
      - name: "Create badge UTAsanX8664Build with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTAsanX8664Build.json
          label: Make-Build
          message: unknown
          color: grey
      - name: "Create badge UTAsanX8664CTest with unknown state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTAsanX8664CTest.json
          label: CTest
          message: unknown
          color: grey
  build-docker-image:
    runs-on: self-hosted
    needs: set-unknown-state-badges-for-CI
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Build image from Dockerfile
        run: docker --log-level=debug build . --file=dockerenv/Dockerfile --tag nemuuser/rpi-pico-build-env:latest --rm=true
      - name: "Create badge BuildDockerImage with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeBuildDockerImage.json
          label: Build
          message: passing
          color: green
      - name: "Create badge BuildDockerImage with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeBuildDockerImage.json
          label: Build
          message: failing
          color: red
      - name: "Print existing docker images before cleanup the dangling ones"
        if: ${{ always() }}
        run: docker images --all
      - name: "Clean dangling docker images"
        if: ${{ always() }}
        run: docker rmi $(docker images -f "dangling=true" -q) || echo "No images to delete"
      - name: "Print existing docker images after cleanup the dangling ones"
        if: ${{ always() }}
        run: docker images --all
  build-library-for-host-x86_64:
    runs-on: [self-hosted]
    needs: build-docker-image
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Set executable privileges to CI run scripts
        run: |
          chmod +x ${{ github.workspace }}/ci/lib_host/runCMake.sh
          chmod +x ${{ github.workspace }}/ci/lib_host/runMake.sh
      - name: "Check docker container availability"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_host
          run: |
            echo "Executed in docker container. Test: OK!"
      - name: "Create directory for build artifacts"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_host
          run: |
            cd workspace_lib_host
            mkdir -p build_lib_host
      - name: "Run CMake"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_host
          run: |
            cd workspace_lib_host/build_lib_host
            bash ../ci/lib_host/runCMake.sh
      - name: "Create badge LibHostCmake with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibHostCmake.json
          label: CMake
          message: passing
          color: green
      - name: "Create badge LibHostCmake with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibHostCmake.json
          label: CMake
          message: failing
          color: red
      - name: "Run Make"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_host
          run: |
            cd workspace_lib_host/build_lib_host
            bash ../ci/lib_host/runMake.sh
      - name: "Create badge LibHostBuild with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibHostBuild.json
          label: Make-Build
          message: passing
          color: green
      - name: "Create badge LibHostBuild with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibHostBuild.json
          label: Make-Build
          message: failing
          color: red
      - name: "Cleanup build artifacts"
        if: ${{ always() }}
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_host
          run: |
            cd workspace_lib_host
            rm -r -f build_lib_host
  build-mocks-library-for-host-x86_64:
    runs-on: [self-hosted]
    needs: build-library-for-host-x86_64
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Set executable privileges to CI run scripts
        run: |
          chmod +x ${{ github.workspace }}/ci/lib_mocks/runCMake.sh
          chmod +x ${{ github.workspace }}/ci/lib_mocks/runMake.sh
      - name: "Check docker container availability"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_mocks
          run: |
            echo "Executed in docker container. Test: OK!"
      - name: "Create directory for build artifacts"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_mocks
          run: |
            cd workspace_lib_mocks
            mkdir -p build_lib_mocks
      - name: "Run CMake"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_mocks
          run: |
            cd workspace_lib_mocks/build_lib_mocks
            bash ../ci/lib_mocks/runCMake.sh
      - name: "Create badge LibMocksCmake with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibMocksCmake.json
          label: CMake
          message: passing
          color: green
      - name: "Create badge LibMocksCmake with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibMocksCmake.json
          label: CMake
          message: failing
          color: red
      - name: "Run Make"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_mocks
          run: |
            cd workspace_lib_mocks/build_lib_mocks
            bash ../ci/lib_mocks/runMake.sh
      - name: "Create badge LibMocksBuild with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibMocksBuild.json
          label: Make-Build
          message: passing
          color: green
      - name: "Create badge LibMocksBuild with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibMocksBuild.json
          label: Make-Build
          message: failing
          color: red
      - name: "Cleanup build artifacts"
        if: ${{ always() }}
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_mocks
          run: |
            cd workspace_lib_mocks
            rm -r -f build_lib_mocks
  build-stubs-library-for-host-x86_64:
    runs-on: [self-hosted]
    needs: build-library-for-host-x86_64
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Set executable privileges to CI run scripts
        run: |
          chmod +x ${{ github.workspace }}/ci/lib_stubs/runCMake.sh
          chmod +x ${{ github.workspace }}/ci/lib_stubs/runMake.sh
      - name: "Check docker container availability"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_stubs
          run: |
            echo "Executed in docker container. Test: OK!"
      - name: "Create directory for build artifacts"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_stubs
          run: |
            cd workspace_lib_stubs
            mkdir -p build_lib_stubs
      - name: "Run CMake"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_stubs
          run: |
            cd workspace_lib_stubs/build_lib_stubs
            bash ../ci/lib_stubs/runCMake.sh
      - name: "Create badge LibStubsCmake with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibStubsCmake.json
          label: CMake
          message: passing
          color: green
      - name: "Create badge LibStubsCmake with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibStubsCmake.json
          label: CMake
          message: failing
          color: red
      - name: "Run Make"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_stubs
          run: |
            cd workspace_lib_stubs/build_lib_stubs
            bash ../ci/lib_stubs/runMake.sh
      - name: "Create badge LibStubsBuild with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibStubsBuild.json
          label: Make-Build
          message: passing
          color: green
      - name: "Create badge LibStubsBuild with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibStubsBuild.json
          label: Make-Build
          message: failing
          color: red
      - name: "Cleanup build artifacts"
        if: ${{ always() }}
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_stubs
          run: |
            cd workspace_lib_stubs
            rm -r -f build_lib_stubs
  build-library-for-target-ARM32-CortexM0Plus:
    runs-on: [self-hosted]
    needs: build-docker-image
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Set executable privileges to CI run scripts
        run: |
          chmod +x ${{ github.workspace }}/ci/lib_target/runCMake.sh
          chmod +x ${{ github.workspace }}/ci/lib_target/runMake.sh
      - name: "Check docker container availability"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_target
          run: |
            echo "Executed in docker container. Test: OK!"
      - name: "Create directory for build artifacts"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_target
          run: |
            cd workspace_lib_target
            mkdir -p build_lib_target
      - name: "Run CMake"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_target
          run: |
            cd workspace_lib_target/build_lib_target
            bash ../ci/lib_target/runCMake.sh
      - name: "Create badge LibTargetCmake with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibTargetCmake.json
          label: CMake
          message: passing
          color: green
      - name: "Create badge LibTargetCmake with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibTargetCmake.json
          label: CMake
          message: failing
          color: red
      - name: "Run Make"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_target
          run: |
            cd workspace_lib_target/build_lib_target
            bash ../ci/lib_target/runMake.sh
      - name: "Create badge LibTargetBuild with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibTargetBuild.json
          label: Make-Build
          message: passing
          color: green
      - name: "Create badge LibTargetBuild with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeLibTargetBuild.json
          label: Make-Build
          message: failing
          color: red
      - name: "Cleanup build artifacts"
        if: ${{ always() }}
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_lib_target
          run: |
            cd workspace_lib_target
            rm -r -f build_lib_target
  build-and-run-UT-x86_64:
    runs-on: [self-hosted]
    needs: build-library-for-host-x86_64
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Set executable privileges to CI run scripts
        run: |
          chmod +x ${{ github.workspace }}/ci/ut_x86_64/runCMake.sh
          chmod +x ${{ github.workspace }}/ci/ut_x86_64/runCTest.sh
          chmod +x ${{ github.workspace }}/ci/ut_x86_64/runMake.sh
      - name: "Check docker container availability"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_x86_64
          run: |
            echo "Executed in docker container. Test: OK!"
      - name: "Create directory for build artifacts"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_x86_64
          run: |
            cd workspace_ut_x86_64
            mkdir -p build_ut_x86_64
      - name: "Run CMake for UT"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_x86_64
          run: |
            cd workspace_ut_x86_64/build_ut_x86_64
            bash ../ci/ut_x86_64/runCMake.sh
      - name: "Create badge UTX8664Cmake with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTX8664Cmake.json
          label: CMake
          message: passing
          color: green
      - name: "Create badge UTX8664Cmake with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTX8664Cmake.json
          label: CMake
          message: failing
          color: red
      - name: "Run Make for UT"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_x86_64
          run: |
            cd workspace_ut_x86_64/build_ut_x86_64
            bash ../ci/ut_x86_64/runMake.sh
      - name: "Create badge UTX8664Build with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTX8664Build.json
          label: Make-Build
          message: passing
          color: green
      - name: "Create badge UTX8664Build with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTX8664Build.json
          label: Make-Build
          message: failing
          color: red
      - name: "Run CTest for UT"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_x86_64
          run: |
            cd workspace_ut_x86_64/build_ut_x86_64
            bash ../ci/ut_x86_64/runCTest.sh
      - name: "Create badge UTX8664CTest with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTX8664CTest.json
          label: CTest
          message: passing
          color: green
      - name: "Create badge UTX8664CTest with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTX8664CTest.json
          label: CTest
          message: failing
          color: red
      - name: "Cleanup build artifacts"
        if: ${{ always() }}
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_x86_64
          run: |
            cd workspace_ut_x86_64
            rm -r -f build_ut_x86_64
  build-and-run-UT-with-address-sanitizer-x86_64:
    runs-on: [self-hosted]
    needs: build-and-run-UT-x86_64
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Set executable privileges to CI run scripts
        run: |
          chmod +x ${{ github.workspace }}/ci/ut_asan_x86_64/runCMake.sh
          chmod +x ${{ github.workspace }}/ci/ut_asan_x86_64/runCTest.sh
          chmod +x ${{ github.workspace }}/ci/ut_asan_x86_64/runMake.sh
      - name: "Check docker container availability"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_asan_x86_64
          run: |
            echo "Executed in docker container. Test: OK!"
      - name: "Create directory for build artifacts"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_asan_x86_64
          run: |
            cd workspace_ut_asan_x86_64
            mkdir -p build_ut_asan_x86_64
      - name: "Run CMake for UT"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_asan_x86_64
          run: |
            cd workspace_ut_asan_x86_64/build_ut_asan_x86_64
            bash ../ci/ut_asan_x86_64/runCMake.sh
      - name: "Create badge UTAsanX8664Cmake with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTAsanX8664Cmake.json
          label: CMake
          message: passing
          color: green
      - name: "Create badge UTXAsan8664Cmake with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTAsanX8664Cmake.json
          label: CMake
          message: failing
          color: red
      - name: "Run Make for UT"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_asan_x86_64
          run: |
            cd workspace_ut_asan_x86_64/build_ut_asan_x86_64
            bash ../ci/ut_asan_x86_64/runMake.sh
      - name: "Create badge UTAsanX8664Build with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTAsanX8664Build.json
          label: Make-Build
          message: passing
          color: green
      - name: "Create badge UTAsanX8664Build with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTAsanX8664Build.json
          label: Make-Build
          message: failing
          color: red
      - name: "Run CTest for UT"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_asan_x86_64
          run: |
            cd workspace_ut_asan_x86_64/build_ut_asan_x86_64
            bash ../ci/ut_asan_x86_64/runCTest.sh
      - name: "Create badge UTAsanX8664CTest with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTAsanX8664CTest.json
          label: CTest
          message: passing
          color: green
      - name: "Create badge UTAsanX8664CTest with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTAsanX8664CTest.json
          label: CTest
          message: failing
          color: red
      - name: "Cleanup build artifacts"
        if: ${{ always() }}
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_asan_x86_64
          run: |
            cd workspace_ut_asan_x86_64
            rm -r -f build_ut_asan_x86_64
  build-and-run-UT-with-code-coverage-x86_64:
    runs-on: [self-hosted]
    needs: build-and-run-UT-x86_64
    steps:
      - name: Checkout / clone GitHub repo
        uses: actions/checkout@main
        with:
          submodules: true
      - name: Set executable privileges to CI run scripts
        run: |
          chmod +x ${{ github.workspace }}/ci/ut_lcov_x86_64/runCMake.sh
          chmod +x ${{ github.workspace }}/ci/ut_lcov_x86_64/runCodeCoverageGenerating.sh
          chmod +x ${{ github.workspace }}/ci/ut_lcov_x86_64/runMake.sh
      - name: "Check docker container availability"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_lcov_x86_64
          run: |
            echo "Executed in docker container. Test: OK!"
      - name: "Create directory for build artifacts"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_lcov_x86_64
          run: |
            cd workspace_ut_lcov_x86_64
            mkdir -p build_ut_lcov_x86_64
      - name: "Run CMake for UT with generating of code coverage enabled"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_lcov_x86_64
          run: |
            cd workspace_ut_lcov_x86_64/build_ut_lcov_x86_64
            bash ../ci/ut_lcov_x86_64/runCMake.sh
      - name: "Create badge UTLcovX8664Cmake with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTLcovX8664Cmake.json
          label: CMake
          message: passing
          color: green
      - name: "Create badge UTLcovX8664Cmake with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTLcovX8664Cmake.json
          label: CMake
          message: failing
          color: red
      - name: "Run Make for UT with generating of code coverage enabled"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_lcov_x86_64
          run: |
            cd workspace_ut_lcov_x86_64/build_ut_lcov_x86_64
            bash ../ci/ut_lcov_x86_64/runMake.sh
      - name: "Create badge UTLcovX8664Build with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTLcovX8664Build.json
          label: Make-Build
          message: passing
          color: green
      - name: "Create badge UTLcovX8664Build with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTLcovX8664Build.json
          label: Make-Build
          message: failing
          color: red
      - name: "Run CTest for UT with generating of code coverage enabled"
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_lcov_x86_64
          run: |
            cd workspace_ut_lcov_x86_64/build_ut_lcov_x86_64
            bash ../ci/ut_lcov_x86_64/runCodeCoverageGenerating.sh
      - name: "Create badge UTLcovX8664CTest with passing state"
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTLcovX8664CTest.json
          label: CTestAndLcov
          message: passing
          color: green
      - name: "Create badge UTLcovX8664CTest with failing state"
        if: ${{ failure() }}
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_CI_TOKEN }}
          gistID: cd2e383311dea01e5e1b133a9769a413
          filename: badgeUTLcovX8664CTest.json
          label: CTest
          message: failing
          color: red
      - name: "Cleanup build artifacts"
        if: ${{ always() }}
        uses: addnab/docker-run-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: nemuuser/rpi-pico-build-env:latest
          options: -v ${{ github.workspace }}:/workspace_ut_lcov_x86_64
          run: |
            cd workspace_ut_lcov_x86_64
            rm -r -f build_ut_lcov_x86_64